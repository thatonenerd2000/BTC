{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('leaflet')) : typeof define === 'function' && define.amd ? define(['leaflet'], factory) : factory(global.L);\n})(this, function (L) {\n  'use strict';\n\n  L.Icon.Default.mergeOptions({\n    // Erase default options, so that they can be overridden by _initializeOptions if not supplied.\n    iconUrl: null,\n    iconRetinaUrl: null,\n    shadowUrl: null,\n    iconSize: null,\n    iconAnchor: null,\n    popupAnchor: null,\n    tooltipAnchor: null,\n    shadowSize: null,\n    // @option classNamePrefix: String = 'leaflet-default-icon-'\n    // Prefix for the classes defined in CSS that contain the Icon options.\n    // See the leaflet-defaulticon-compatibility.css file as a starter.\n    // Expected suffixes are \"icon\", \"shadow\", \"popup\" and \"tooltip\".\n    classNamePrefix: 'leaflet-default-icon-'\n  });\n  L.Icon.Default.include({\n    _needsInit: true,\n    // Override to make sure options are retrieved from CSS.\n    _getIconUrl: function (name) {\n      // @option imagePath: String\n      // `Icon.Default` will try to auto-detect the location of\n      // the blue icon images. If you are placing these images in a\n      // non-standard way, set this option to point to the right\n      // path, before any marker is added to a map.\n      // Caution: do not use this option with inline base64 image(s).\n      var imagePath = this.options.imagePath || L.Icon.Default.imagePath || '';\n      // Deprecated (IconDefault.imagePath), backwards-compatibility only\n\n      if (this._needsInit) {\n        // Modifying imagePath option after _getIconUrl has been called\n        // once in this instance of IconDefault will no longer have any\n        // effect.\n        this._initializeOptions(imagePath);\n      }\n      return imagePath + L.Icon.prototype._getIconUrl.call(this, name);\n    },\n    // Initialize all necessary options for this instance.\n    _initializeOptions: function (imagePath) {\n      this._setOptions('icon', _detectIconOptions, imagePath);\n      this._setOptions('shadow', _detectIconOptions, imagePath);\n      this._setOptions('popup', _detectDivOverlayOptions);\n      this._setOptions('tooltip', _detectDivOverlayOptions);\n      this._needsInit = false;\n    },\n    // Retrieve values from CSS and assign to this instance options.\n    _setOptions: function (name, detectorFn, imagePath) {\n      var options = this.options,\n        prefix = options.classNamePrefix,\n        optionValues = detectorFn(prefix + name, imagePath);\n      for (var optionName in optionValues) {\n        options[name + optionName] = options[name + optionName] || optionValues[optionName];\n      }\n    }\n  });\n\n  // Retrieve icon option values from CSS (icon or shadow).\n  function _detectIconOptions(className, imagePath) {\n    var el = L.DomUtil.create('div', className, document.body),\n      urlsContainer = _getBkgImageOrCursor(el),\n      urls = _extractUrls(urlsContainer, imagePath),\n      iconX = _getStyleInt(el, 'width'),\n      iconY = _getStyleInt(el, 'height'),\n      anchorNX = _getStyleInt(el, 'margin-left'),\n      anchorNY = _getStyleInt(el, 'margin-top');\n    el.parentNode.removeChild(el);\n    return {\n      Url: urls[0],\n      RetinaUrl: urls[1],\n      Size: [iconX, iconY],\n      Anchor: [-anchorNX, -anchorNY]\n    };\n  }\n\n  // Retrieve anchor option values from CSS (popup or tooltip).\n  function _detectDivOverlayOptions(className) {\n    var el = L.DomUtil.create('div', className, document.body),\n      anchorX = _getStyleInt(el, 'margin-left'),\n      anchorY = _getStyleInt(el, 'margin-top');\n    el.parentNode.removeChild(el);\n    return {\n      Anchor: [anchorX, anchorY]\n    };\n  }\n\n  // Read the CSS url (could be path or inline base64), may be multiple.\n  // First: normal icon\n  // Second: Retina icon\n  function _extractUrls(urlsContainer, imagePath) {\n    var re = /url\\(['\"]?([^\"']*?)['\"]?\\)/gi,\n      // Match anything between url( and ), possibly with single or double quotes.\n      urls = [],\n      m = re.exec(urlsContainer);\n    while (m) {\n      // Keep the entire URL from CSS rule, so that each image can have its own full URL.\n      // Except in the case imagePath is provided: remove the path part (i.e. keep only the file name).\n      urls.push(imagePath ? _stripPath(m[1]) : m[1]);\n      m = re.exec(urlsContainer);\n    }\n    return urls;\n  }\n\n  // Remove anything before the last slash (/) occurrence (inclusive).\n  // Caution: will give unexpected result if url is inline base64 data\n  // => do not specify imagePath in that case!\n  function _stripPath(url) {\n    return url.substr(url.lastIndexOf('/') + 1);\n  }\n  function _getStyleInt(el, style) {\n    return parseInt(_getStyle(el, style), 10);\n  }\n\n  // Factorize style reading fallback for IE8.\n  function _getStyle(el, style) {\n    return L.DomUtil.getStyle(el, style) || L.DomUtil.getStyle(el, _kebabToCamelCase(style));\n  }\n\n  // When Firefox high contrast (colours override) option is enabled,\n  // \"background-image\" is overridden by the browser as \"none\".\n  // In that case, fallback to \"cursor\". But keep \"background-image\"\n  // as primary source because IE expects cursor URL as relative to HTML page\n  // instead of relative to CSS file.\n  function _getBkgImageOrCursor(el) {\n    var bkgImage = _getStyle(el, 'background-image');\n    return bkgImage && bkgImage !== 'none' ? bkgImage : _getStyle(el, 'cursor');\n  }\n\n  // Convert kebab-case CSS property name to camelCase for IE currentStyle.\n  function _kebabToCamelCase(prop) {\n    return prop.replace(/-(\\w)/g, function (str, w) {\n      return w.toUpperCase();\n    });\n  }\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","L","Icon","Default","mergeOptions","iconUrl","iconRetinaUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","classNamePrefix","include","_needsInit","_getIconUrl","name","imagePath","options","_initializeOptions","prototype","call","_setOptions","_detectIconOptions","_detectDivOverlayOptions","detectorFn","prefix","optionValues","optionName","className","el","DomUtil","create","document","body","urlsContainer","_getBkgImageOrCursor","urls","_extractUrls","iconX","_getStyleInt","iconY","anchorNX","anchorNY","parentNode","removeChild","Url","RetinaUrl","Size","Anchor","anchorX","anchorY","re","m","exec","push","_stripPath","url","substr","lastIndexOf","style","parseInt","_getStyle","getStyle","_kebabToCamelCase","bkgImage","prop","replace","str","w","toUpperCase"],"sources":["/Users/shadmanchowdhury/School/CSE_442/node_modules/leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('leaflet')) :\n\ttypeof define === 'function' && define.amd ? define(['leaflet'], factory) :\n\t(factory(global.L));\n}(this, (function (L) { 'use strict';\n\n\tL.Icon.Default.mergeOptions({\n\t\t// Erase default options, so that they can be overridden by _initializeOptions if not supplied.\n\t\ticonUrl: null,\n\t\ticonRetinaUrl: null,\n\t\tshadowUrl: null,\n\t\ticonSize: null,\n\t\ticonAnchor: null,\n\t\tpopupAnchor: null,\n\t\ttooltipAnchor: null,\n\t\tshadowSize: null,\n\n\t\t// @option classNamePrefix: String = 'leaflet-default-icon-'\n\t\t// Prefix for the classes defined in CSS that contain the Icon options.\n\t\t// See the leaflet-defaulticon-compatibility.css file as a starter.\n\t\t// Expected suffixes are \"icon\", \"shadow\", \"popup\" and \"tooltip\".\n\t\tclassNamePrefix: 'leaflet-default-icon-',\n\t});\n\n\n\tL.Icon.Default.include({\n\n\t\t_needsInit: true,\n\n\t\t// Override to make sure options are retrieved from CSS.\n\t\t_getIconUrl: function (name) {\n\t\t\t// @option imagePath: String\n\t\t\t// `Icon.Default` will try to auto-detect the location of\n\t\t\t// the blue icon images. If you are placing these images in a\n\t\t\t// non-standard way, set this option to point to the right\n\t\t\t// path, before any marker is added to a map.\n\t\t\t// Caution: do not use this option with inline base64 image(s).\n\t\t\tvar imagePath = this.options.imagePath || L.Icon.Default.imagePath || '';\n\t\t\t// Deprecated (IconDefault.imagePath), backwards-compatibility only\n\n\t\t\tif (this._needsInit) {\n\t\t\t\t// Modifying imagePath option after _getIconUrl has been called\n\t\t\t\t// once in this instance of IconDefault will no longer have any\n\t\t\t\t// effect.\n\t\t\t\tthis._initializeOptions(imagePath);\n\t\t\t}\n\n\t\t\treturn imagePath + L.Icon.prototype._getIconUrl.call(this, name);\n\t\t},\n\n\t\t// Initialize all necessary options for this instance.\n\t\t_initializeOptions: function (imagePath) {\n\t\t\tthis._setOptions('icon', _detectIconOptions, imagePath);\n\t\t\tthis._setOptions('shadow', _detectIconOptions, imagePath);\n\t\t\tthis._setOptions('popup', _detectDivOverlayOptions);\n\t\t\tthis._setOptions('tooltip', _detectDivOverlayOptions);\n\t\t\tthis._needsInit = false;\n\t\t},\n\n\t\t// Retrieve values from CSS and assign to this instance options.\n\t\t_setOptions: function (name, detectorFn, imagePath) {\n\t\t\tvar options = this.options,\n\t\t\t    prefix = options.classNamePrefix,\n\t\t\t    optionValues = detectorFn(prefix + name, imagePath);\n\n\t\t\tfor (var optionName in optionValues) {\n\t\t\t\toptions[name + optionName] = options[name + optionName] || optionValues[optionName];\n\t\t\t}\n\t\t}\n\n\t});\n\n\n\t// Retrieve icon option values from CSS (icon or shadow).\n\tfunction _detectIconOptions(className, imagePath) {\n\t\tvar el = L.DomUtil.create('div',  className, document.body),\n\t\t    urlsContainer = _getBkgImageOrCursor(el),\n\t\t    urls = _extractUrls(urlsContainer, imagePath),\n\t\t    iconX = _getStyleInt(el, 'width'),\n\t\t    iconY = _getStyleInt(el, 'height'),\n\t\t    anchorNX = _getStyleInt(el, 'margin-left'),\n\t\t    anchorNY = _getStyleInt(el, 'margin-top');\n\n\t\tel.parentNode.removeChild(el);\n\n\t\treturn {\n\t\t\tUrl: urls[0],\n\t\t\tRetinaUrl: urls[1],\n\t\t\tSize: [iconX, iconY],\n\t\t\tAnchor: [-anchorNX, -anchorNY]\n\t\t};\n\t}\n\n\t// Retrieve anchor option values from CSS (popup or tooltip).\n\tfunction _detectDivOverlayOptions(className) {\n\t\tvar el = L.DomUtil.create('div', className, document.body),\n\t\t    anchorX = _getStyleInt(el, 'margin-left'),\n\t\t    anchorY = _getStyleInt(el, 'margin-top');\n\n\t\tel.parentNode.removeChild(el);\n\n\t\treturn {\n\t\t\tAnchor: [anchorX, anchorY]\n\t\t};\n\t}\n\n\t// Read the CSS url (could be path or inline base64), may be multiple.\n\t// First: normal icon\n\t// Second: Retina icon\n\tfunction _extractUrls(urlsContainer, imagePath) {\n\t\tvar re = /url\\(['\"]?([^\"']*?)['\"]?\\)/gi, // Match anything between url( and ), possibly with single or double quotes.\n\t\t    urls = [],\n\t\t    m = re.exec(urlsContainer);\n\n\t\twhile (m) {\n\t\t\t// Keep the entire URL from CSS rule, so that each image can have its own full URL.\n\t\t\t// Except in the case imagePath is provided: remove the path part (i.e. keep only the file name).\n\t\t\turls.push(imagePath ? _stripPath(m[1]) : m[1]);\n\t\t\tm = re.exec(urlsContainer);\n\t\t}\n\n\t\treturn urls;\n\t}\n\n\t// Remove anything before the last slash (/) occurrence (inclusive).\n\t// Caution: will give unexpected result if url is inline base64 data\n\t// => do not specify imagePath in that case!\n\tfunction _stripPath(url) {\n\t\treturn url.substr(url.lastIndexOf('/') + 1);\n\t}\n\n\tfunction _getStyleInt(el, style) {\n\t\treturn parseInt(_getStyle(el, style), 10);\n\t}\n\n\t// Factorize style reading fallback for IE8.\n\tfunction _getStyle(el, style) {\n\t\treturn L.DomUtil.getStyle(el, style) || L.DomUtil.getStyle(el, _kebabToCamelCase(style));\n\t}\n\n\t// When Firefox high contrast (colours override) option is enabled,\n\t// \"background-image\" is overridden by the browser as \"none\".\n\t// In that case, fallback to \"cursor\". But keep \"background-image\"\n\t// as primary source because IE expects cursor URL as relative to HTML page\n\t// instead of relative to CSS file.\n\tfunction _getBkgImageOrCursor(el) {\n\t\tvar bkgImage = _getStyle(el, 'background-image');\n\n\t\treturn bkgImage && bkgImage !== 'none' ? bkgImage : _getStyle(el, 'cursor');\n\t}\n\n\t// Convert kebab-case CSS property name to camelCase for IE currentStyle.\n\tfunction _kebabToCamelCase(prop) {\n\t\treturn prop.replace(/-(\\w)/g, function (str, w) {\n\t\t\treturn w.toUpperCase();\n\t\t});\n\t}\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}